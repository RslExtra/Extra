/**
    @package  Collections
    @ancestor Extra
    @author Dzhanybaev M.P.
    @version 1.0

    Библиотека коллекций для языка RSL.

    Создана с целью взаимодействия с объектами описанными на языке RSL в объектно-ориентированном и функциональном стилях программирования.
    В большинстве своём схожа с 'Java.collections'.
    Для начала использования, достаточно импортировать библиотеку в макрофайл директивой `import "..\\Mac\\Extra\\Collections\\Collections.mac";`
    Также возможен импорт отдельных макрофайлов.
    Изначально все коллекции поддерживают работу с элементами разных типов RSL. Однако для обеспечения большей производительности рекомендуется использовать в одной коллекции элементы одного типа и определить этот тип методами [ListInterface.setType] для списков, [SetInterface.setType] для сэтов, и [MapInterface.setKeyType] и [MapInterface.setValueType] для карт.

    Иерархия классов.
    Базовый класс [Iterable].
    От него наследуются абстрактные классы-интерфейсы определяющее общие методы.

    Списки ([ListInterface]):
      - [ArrayList]  - список, реализованный на основе массива [TArray].
      - [LinkedList] - двусвязный список. Присутствуют методы стека и очереди.
      - [SortedLinkedList] - сортированный двусвязный список. Все элементы коллекции упорядочены в каждый момент времени согласно заданной функции-компаратору.

    Множества ([SetInterface]), коллекции уникальных элементов.
      - [HashSet] - Сэт на основе [HashMap]. Самый быстрый по производительности вариант. Не гарантирует сохранение порядка.
      - [LinkedHashSet] - тоже самое что и [HashSet], однако элементы будут стоять в порядке добавления.
      - [TreeSet] - Сэт на основе [TreeMap]. Элементы располагаются в порядке возрастания согласно заданной функции-компаратору.

    Карты ([MapInterface]), коллекции для работы с парами ключ-значение.
      - [HashMap]    - она же хэштаблица. Не гарантирует порядок элементов.
      - [LinkedHashMap] - упорядоченная реализация [HashMap]. Сохраняет порядок добавления.
      - [TreeMap] - реализация основанная на красно-черных деревьях. Элементы располагаются в порядке возрастания ключей.
      - [ArrayMap] - реализация на основе двух массивов для примитивных ключей. Занимает меньше остальных карт места в памяти. Элементы упорядочены по возрастанию ключей.

*/

import "..\\Mac\\Extra\\Collections\\ArrayList.mac";
import "..\\Mac\\Extra\\Collections\\LinkedList.mac";
import "..\\Mac\\Extra\\Collections\\HashMap.mac";
import "..\\Mac\\Extra\\Collections\\HashSet.mac";
import "..\\Mac\\Extra\\Collections\\LinkedHashMap.mac";
import "..\\Mac\\Extra\\Collections\\LinkedHashSet.mac";
import "..\\Mac\\Extra\\Collections\\TreeMap.mac";
import "..\\Mac\\Extra\\Collections\\TreeSet.mac";
import "..\\Mac\\Extra\\Collections\\ArrayMap.mac";