/**
   @package Collections
   Реализация отсортированной коллекции уникальных значений.
*/

import "..\\Mac\\Extra\\Collections\\TreeMap.mac";


Class (SetInterface) TreeSet(_keyComparator)
   size = 0;
   private var inmap = TreeMap(_keyComparator);

   Macro setPrimitive() : TreeSet
      inmap.setKeyType(V_STRING);
      return this;
   End;

   Macro add(element : Variant) : Bool
      if (inmap.put(element, PRESENT) != PRESENT)
         size = size + 1;
         return true;
      end;
      return false;
   End;

   Macro addAll(iterable) : Bool
      var r = true;
      for(var el, iterable)
         r = (r and inmap.put(el));
      end;
      return r;
   End;

   Macro remove(element) : Bool
      if (inmap.remove(element) == PRESENT)
         size = size - 1;
         return true;
      end;
      return false;
   End;

   Macro removeAll(enumerable) : Bool
      var r = true;
      for (var el, enumerable)
         r = (r and remove(el));
      end;
      return r;
   End;

   Macro contains(element) : Bool
      return (inmap.get(element) == PRESENT);
   End;

   Macro containsAll(enumerable) : Bool
      for (var el, enumerable)
         if (contains(el) == false)
            return false;
         end;
      end;
      return true;
   End;

   Macro newIterator()
      return inmap.newKeyIterator();
   End;

   Macro toArray() : TArray
      return inmap.keys();
   End;
End;

var comp2 = CF_ObjectComparator(Arrays.of("name"));
var comp = CF_ObjectComparator(Arrays.of("name" , "year"));

Class TClass()
   var name = "n" + Random(100);
   var year = 1000 + Random(1000);

   Macro CompareTo(o)
      return comp.compare(this, o);
   End;

   Macro toString()
      return name + " - " + year;
   End;
End;

Macro testTreeSet()
   var set = TreeSet(R2M(comp2, "compare"));
   var i;
   for(i, 1, 10000)
      set.add(TClass);
   end;
   println(set.size);
   var arr = set.toArray;
   for(i, 0, arr.size-1)
      println(arr[i]);
   end;
End;

//testTreeSet;