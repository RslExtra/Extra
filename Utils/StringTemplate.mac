/**
   @package Utils
   @version 0.93
   @author Dzhanybaev M.P.

   Строковые шаблоны.
*/

/* Итератор для именования сгенерированных макросов во избежание конфликтов */
Private var macroCount = 0;

/**
   Возвращает сгенерированную строку из шаблона 'tmpl'.
   Для передачи выражения expr необходимо заключить его в '$[expr]';
   expr может быть
      - глобальной переменной,
      - ссылкой на объект с реализованным методом toString,
      - любым выражением на языке RSL, доступным в глобальном контексте, за исключением символов `[]`(т.е к эл-ам массива следует обращаться через () );

   Также возможно применять спецификаторы форматирования внутри скобок `[]`.

      Например:
      ```
         var acc = "40817840000000001234";
         var client = "Иванов Иван Иванович";
         var sum = $100523.23;
         var rate = 65.59;
         var tmpl = StrTmpl("Остаток на счёте в р.э. $[acc] ($[client]) = $[sum*rate:a:0:2]");
         Println(tmpl);
         // Остаток на счёте в р.э. 40817840000000001234 (Иванов Иван Иванович) = 659'331'865.57
      ```

   Для использования функции внутри макрофункции, есть возможность использовать принудительно-глобальные переменные (пгп)
   при этом, если необходимо передать в шаблон одиночную пгп, можно не ограничивать её $[],

      ```
         Macro pgp()
            var {i} = 0;
            for({i}, 1, 5)
               PrintlnT("Строка {i} к Вашим услугам.");
            end;
         End;
         pgp();
         // Выведет 5 нумерованных строк.
      ```


   @param [tmpl] шаблон строки
   @return сгенерированную строку из шаблона 'tmpl'.
*/
Macro StrTmpl(tmpl : String) : String
   macroCount = macroCount + 1;
   var pos = 1;
   var oldPos = 1;
   var posClose, posG;
   var newFunc = "macro ___m" + macroCount + "() return (";
   while(pos>0)
      pos  = Index(tmpl, "$[", oldPos);
      posG = Index(tmpl, "{" , oldPos);
      if ((pos > 0) and ((posG == 0) or (posG > pos)))
         posClose = Index(tmpl, "]", pos);
         if(posClose == 0) break; end;
         newFunc = newFunc + "\"" + SubStr(tmpl, oldPos, pos-oldPos) + "\"+";
         newFunc = newFunc + "String(" + SubStr(tmpl, pos + 2, posClose - pos - 2) + ")+";
         oldPos = posClose + 1;
      elif((posG > 0) and ((pos == 0) or (posG < pos)))
         pos = posG;
         posClose = Index(tmpl, "}", pos);
         if(posClose == 0) break; end;
         newFunc = newFunc + "\"" + SubStr(tmpl, oldPos, pos-oldPos) +"\"+";
         newFunc = newFunc + "String(" + SubStr(tmpl, pos, posClose - pos + 1) + ")+";
         oldPos = posClose + 1;
      end;
   end;
   newFunc = newFunc + "\"" + SubStr(tmpl, oldPos) +"\");end;";
   return ExecMacroModule(newfunc, "___m" + macroCount);
End;

/**
   Передает в выходной поток сгенерированную строку из шаблона 'tmpl' с переносом строки.
*/
Macro PrintlnT(tmpl)
   Println(StrTmpl(tmpl));
End;

/**
   Передает в выходной поток сгенерированную строку из шаблона 'tmpl' без переноса строки.
*/
Macro PrintT(tmpl)
   Print(StrTmpl(tmpl));
End;


/**
   Возвращает выражение RSL в виде строки, которое можно вызвать в [ExecExp]. Таким образом появляется возможность передавать любые переменные (в т.ч и локальные переменные макроса) в шаблон.

   Например:
```
   Macro inner()
      var b = 1.3;
      var a = 5.17;
      var resultString = ExecExp(ST("A is $[a], B is $[b]. Multiply = $[a*b]"));
      println(resultString);
   End;

   inner();

```
*/
Macro ST(tmpl : String)
   macroCount = macroCount + 1;
   var pos = 1;
   var oldPos = 1;
   var posClose, posG;
   var expr = "";
   while(pos>0)
      pos  = Index(tmpl, "$[", oldPos);
      posG = Index(tmpl, "{" , oldPos);
      if ((pos > 0) and ((posG == 0) or (posG > pos)))
         posClose = Index(tmpl, "]", pos);
         if(posClose == 0) break; end;
         expr = expr + "\"" + SubStr(tmpl, oldPos, pos-oldPos) + "\"+";
         expr = expr + "String(" + SubStr(tmpl, pos + 2, posClose - pos - 2) + ")+";
         oldPos = posClose + 1;
      end;
   end;
   expr = expr + "\"\"";
   return expr;
End;

/**
   Возвращает выражение RSL в виде строки, которое можно вызвать в [ExecExp]. Результат выражения будет выведен на экран.

   Например:
```
   Macro inner()
      var b = 1.3;
      var a = 5.17;
      var resultString = ExecExp(PL("A is $[a], B is $[b]. Multiply = $[a*b]"));
   End;

   inner();

```
*/
Macro PL(tmpl)
   var expr = "println(" + St(tmpl) + ")";
   return expr;
End;
