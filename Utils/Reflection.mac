import rcw;

Macro getPrivateProp(obj, prop)
   var upr = StrUpr(prop);
   var props = GetObjProps(obj, false);
   for(var i, 0, props.size - 1, 1)
      if (props[i] == upr)
         return obj[i];
      end;
   end;
End;

Class myClass()
   private var in = 10;
   Private Macro doSome(p1, p2, p3)
      println(P1 + P2 + P3);
   End;

   Private Macro change(p1 : @Variant)
      p1 = p1 + 1;
   End;

   Macro callPrivateMeth(meth)
      debugbreak;
       var expr = meth + "(";
       var pc = ParmCount;
       var p;
       for(var i, 2, pc - 1, 1)
           getParm(i, p);
           expr = expr + p;
           if (i != pc - 1)
               expr = expr + ",";
           end;
       end;
       expr = expr + ");";
       return ExecExp(expr);
   End;

   Macro getPrivateProp(_pr)
      return ExecExp(_pr);
   End;

   Macro setPrivateProp(_pr, _val)
      ExecExp(_pr + "=" + _val);
   End;
End;


Macro getPrivateMeth(obj, meth)

End;

var obj = myClass();

debugbreak;
var a = 1;
obj.callPrivateMeth("change", @a);
println(a);
obj.callPrivateMeth("doSome", 1, 2, 3);
//var a = getPrivateMeth(myClass, "doSome", 1, 2, 3);